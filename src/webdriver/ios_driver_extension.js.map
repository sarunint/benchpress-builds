{"version":3,"file":"ios_driver_extension.js","sourceRoot":"./","sources":["src/webdriver/ios_driver_extension.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAEH,wCAAyC;AAEzC,8DAAuD;AACvD,kEAA0F;AAG1F,IAAa,kBAAkB,0BAA/B,MAAa,kBAAmB,SAAQ,yCAAkB;IAGxD,YAAoB,OAAyB;QAAI,KAAK,EAAE,CAAC;QAArC,YAAO,GAAP,OAAO,CAAkB;IAAa,CAAC;IAE3D,EAAE,KAAmB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC,CAAC;IAE3E,SAAS,CAAC,IAAY;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,IAAI,KAAK,CAAC,CAAC;IAChE,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,cAA2B,IAAI;QACnD,IAAI,MAAM,GAAG,oBAAoB,IAAI,KAAK,CAAC;QAC3C,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,MAAM,IAAI,iBAAiB,WAAW,KAAK,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,kFAAkF;IAClF,WAAW;QACT,uEAAuE;QACvE,4CAA4C;QAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;aACnC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC7C,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YAChB,MAAM,OAAO,GAAU,EAAE,CAAC;YAC1B,OAAO,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;gBAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACxD,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,wBAAwB,EAAE;oBAClD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC3C;YACH,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACT,CAAC;IAED,gBAAgB;IACR,2BAA2B,CAAC,OAAc,EAAE,SAA8B,IAAI;QACpF,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,EAAE,CAAC;SACb;QACD,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,QAAQ,GAAsB,IAAI,CAAC;YACvC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC5B,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YACtC,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YAElC,IAAI,IAAI,KAAK,cAAc,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,gBAAgB,CAAC,EAAE;gBACxF,MAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;gBACrD,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC9C;iBAAM,IAAI,IAAI,KAAK,MAAM,EAAE;gBAC1B,MAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;aACjE;iBAAM,IAAI,IAAI,KAAK,SAAS,EAAE;gBAC7B,MAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;aAC/D;iBAAM,IACH,IAAI,KAAK,mBAAmB,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,iBAAiB;gBAC/E,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,WAAW,IAAI,IAAI,KAAK,iBAAiB,EAAE;gBAC1E,MAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;gBACrD,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC9C;YACD,uDAAuD;YACvD,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;gBAC9B,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC;aAC9D;YACD,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACpB,MAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,eAAe,KAAsB,OAAO,IAAI,sCAAe,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC;IAElF,QAAQ,CAAC,YAAkC;QACzC,OAAO,YAAY,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC;IAChE,CAAC;CACF,CAAA;AA7EQ,4BAAS,GAAG,CAAC,EAAC,OAAO,EAAE,oBAAkB,EAAE,IAAI,EAAE,CAAC,qCAAgB,CAAC,EAAC,CAAC,CAAC;AADlE,kBAAkB;IAD9B,iBAAU,EAAE;6CAIkB,qCAAgB;GAHlC,kBAAkB,CA8E9B;AA9EY,gDAAkB;AAgF/B,SAAS,WAAW,CAChB,EAA+B,EAAE,IAAY,EAAE,IAAY,EAAE,OAAY,IAAI;IAC/E,MAAM,MAAM,GAAiB;QAC3B,KAAK,EAAE,UAAU;QACjB,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,EAAE;QACR,yEAAyE;QACzE,iBAAiB;QACjB,KAAK,EAAE,MAAM;KACd,CAAC;IACF,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;KACvB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAS,gBAAgB,CAAC,IAAY,EAAE,IAAY,EAAE,OAAY,IAAI;IACpE,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5C,CAAC;AAED,SAAS,cAAc,CAAC,IAAY,EAAE,IAAY,EAAE,OAAY,IAAI;IAClE,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5C,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAY,EAAE,IAAY;IACtD,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtC,CAAC;AAED,SAAS,kBAAkB,CAAC,IAAY,EAAE,IAAY;IACpD,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {WebDriverAdapter} from '../web_driver_adapter';\nimport {PerfLogEvent, PerfLogFeatures, WebDriverExtension} from '../web_driver_extension';\n\n@Injectable()\nexport class IOsDriverExtension extends WebDriverExtension {\n  static PROVIDERS = [{provide: IOsDriverExtension, deps: [WebDriverAdapter]}];\n\n  constructor(private _driver: WebDriverAdapter) { super(); }\n\n  gc(): Promise<any> { throw new Error('Force GC is not supported on iOS'); }\n\n  timeBegin(name: string): Promise<any> {\n    return this._driver.executeScript(`console.time('${name}');`);\n  }\n\n  timeEnd(name: string, restartName: string|null = null): Promise<any> {\n    let script = `console.timeEnd('${name}');`;\n    if (restartName != null) {\n      script += `console.time('${restartName}');`;\n    }\n    return this._driver.executeScript(script);\n  }\n\n  // See https://github.com/WebKit/webkit/tree/master/Source/WebInspectorUI/Versions\n  readPerfLog() {\n    // TODO(tbosch): Bug in IOsDriver: Need to execute at least one command\n    // so that the browser logs can be read out!\n    return this._driver.executeScript('1+1')\n        .then((_) => this._driver.logs('performance'))\n        .then((entries) => {\n          const records: any[] = [];\n          entries.forEach((entry: any) => {\n            const message = JSON.parse(entry['message'])['message'];\n            if (message['method'] === 'Timeline.eventRecorded') {\n              records.push(message['params']['record']);\n            }\n          });\n          return this._convertPerfRecordsToEvents(records);\n        });\n  }\n\n  /** @internal */\n  private _convertPerfRecordsToEvents(records: any[], events: PerfLogEvent[]|null = null) {\n    if (!events) {\n      events = [];\n    }\n    records.forEach((record) => {\n      let endEvent: PerfLogEvent|null = null;\n      const type = record['type'];\n      const data = record['data'];\n      const startTime = record['startTime'];\n      const endTime = record['endTime'];\n\n      if (type === 'FunctionCall' && (data == null || data['scriptName'] !== 'InjectedScript')) {\n        events !.push(createStartEvent('script', startTime));\n        endEvent = createEndEvent('script', endTime);\n      } else if (type === 'Time') {\n        events !.push(createMarkStartEvent(data['message'], startTime));\n      } else if (type === 'TimeEnd') {\n        events !.push(createMarkEndEvent(data['message'], startTime));\n      } else if (\n          type === 'RecalculateStyles' || type === 'Layout' || type === 'UpdateLayerTree' ||\n          type === 'Paint' || type === 'Rasterize' || type === 'CompositeLayers') {\n        events !.push(createStartEvent('render', startTime));\n        endEvent = createEndEvent('render', endTime);\n      }\n      // Note: ios used to support GCEvent up until iOS 6 :-(\n      if (record['children'] != null) {\n        this._convertPerfRecordsToEvents(record['children'], events);\n      }\n      if (endEvent != null) {\n        events !.push(endEvent);\n      }\n    });\n    return events;\n  }\n\n  perfLogFeatures(): PerfLogFeatures { return new PerfLogFeatures({render: true}); }\n\n  supports(capabilities: {[key: string]: any}): boolean {\n    return capabilities['browserName'].toLowerCase() === 'safari';\n  }\n}\n\nfunction createEvent(\n    ph: 'X' | 'B' | 'E' | 'B' | 'E', name: string, time: number, args: any = null) {\n  const result: PerfLogEvent = {\n    'cat': 'timeline',\n    'name': name,\n    'ts': time,\n    'ph': ph,\n    // The ios protocol does not support the notions of multiple processes in\n    // the perflog...\n    'pid': 'pid0'\n  };\n  if (args != null) {\n    result['args'] = args;\n  }\n  return result;\n}\n\nfunction createStartEvent(name: string, time: number, args: any = null) {\n  return createEvent('B', name, time, args);\n}\n\nfunction createEndEvent(name: string, time: number, args: any = null) {\n  return createEvent('E', name, time, args);\n}\n\nfunction createMarkStartEvent(name: string, time: number) {\n  return createEvent('B', name, time);\n}\n\nfunction createMarkEndEvent(name: string, time: number) {\n  return createEvent('E', name, time);\n}\n"]}